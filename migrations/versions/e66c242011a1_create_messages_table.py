"""create messages table

Revision ID: e66c242011a1
Revises: ed5c1243f031
Create Date: 2025-01-12 13:22:29.627085

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import DDL

# revision identifiers, used by Alembic.
revision: str = 'e66c242011a1'
down_revision: Union[str, None] = 'ed5c1243f031'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages',
                    sa.Column('id', sa.BIGINT(), nullable=False),
                    sa.Column('sender_id', sa.BIGINT(), nullable=False),
                    sa.Column('sender_name', sa.String(), nullable=False),
                    sa.Column('receiver_id', sa.BIGINT(), nullable=False),
                    sa.Column('receiver_name', sa.String(), nullable=False),
                    sa.Column('content', sa.String(), nullable=False),
                    sa.Column('voice_file_path', sa.String(), nullable=True),
                    sa.Column('message_id', sa.BIGINT(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_index(op.f('ix_messages_message_id'), 'messages', ['message_id'], unique=False)
    # ### end Alembic commands ###

    # ### updated_at trigger ###
    op.execute(DDL(
        """
        CREATE OR REPLACE FUNCTION update_messages_updated_at()
        RETURNS TRIGGER AS $$
        BEGIN
            NEW.updated_at = now();
            RETURN NEW;
        END;
        $$
        LANGUAGE plpgsql;
        """
    ))
    op.execute(DDL(
        """
        CREATE TRIGGER messages_updated_at_trigger
        BEFORE UPDATE
        ON messages
        FOR EACH ROW
        EXECUTE PROCEDURE update_messages_updated_at();
        """
    ))
    # ### end updated_at trigger ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_messages_message_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    # ### end Alembic commands ###

    # ### drop updated_at trigger ###
    op.execute(DDL(
        """
        DROP TRIGGER IF EXISTS messages_updated_at_trigger ON messages;
        """
    ))
    op.execute(DDL(
        """
        DROP FUNCTION IF EXISTS update_messages_updated_at();
        """
    ))
    # ### end drop updated_at trigger ###
