"""create accounts table

Revision ID: ed5c1243f031
Revises: ce0e111e778f
Create Date: 2025-01-12 13:18:55.027877

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import DDL

# revision identifiers, used by Alembic.
revision: str = 'ed5c1243f031'
down_revision: Union[str, None] = 'ce0e111e778f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounts',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('api_id', sa.BIGINT(), nullable=False),
    sa.Column('api_hash', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('session_name', sa.String(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('phone_code_hash', sa.String(), nullable=True),
    sa.Column('created_by', sa.BIGINT(), nullable=True),
    sa.Column('updated_by', sa.BIGINT(), nullable=True),
    sa.Column('deleted_by', sa.BIGINT(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accounts_api_id'), 'accounts', ['api_id'], unique=False)
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.create_index(op.f('ix_accounts_user_id'), 'accounts', ['user_id'], unique=False)
    # ### end Alembic commands ###

    # ### updated_at trigger - Corrected ###
    op.execute(DDL(
        """
        CREATE OR REPLACE FUNCTION update_accounts_updated_at()
        RETURNS TRIGGER AS $$
        BEGIN
            NEW.updated_at = now();
            RETURN NEW;
        END;
        $$ LANGUAGE plpgsql;
        """
    ))

    op.execute(DDL(
        """
        CREATE TRIGGER accounts_updated_at_trigger
        BEFORE UPDATE
        ON accounts
        FOR EACH ROW
        EXECUTE PROCEDURE update_accounts_updated_at();
        """
    ))
    # ### end updated_at trigger ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_accounts_user_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_api_id'), table_name='accounts')
    op.drop_table('accounts')
    # ### end Alembic commands ###

    # ### drop updated_at trigger - Corrected ###
    op.execute(DDL(
        """
        DROP TRIGGER IF EXISTS accounts_updated_at_trigger ON accounts;
        """
    ))
    op.execute(DDL(
        """
        DROP FUNCTION IF EXISTS update_accounts_updated_at();
        """
    ))
    # ### end drop updated_at trigger ###
